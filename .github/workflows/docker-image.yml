name: ci

on:
  push:
    branches:
      - "stage"
      - "prod"

jobs:
  sonarcheck:
    name: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/governance:${{ github.ref_name }}
          build-args: |
            "CONFIG_SETUP=${{ github.ref_name }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH Connect
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_CONNECTION_USERNAME }}
          key: ${{ secrets.VM_SSH_PKEY }}
          port: ${{ secrets.VM_SSH_PORT }}
          script: |
            docker stop gov-${{ github.ref_name }} || true && docker rm gov-${{ github.ref_name }} || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/governance:${{ github.ref_name }}
            docker run -d --name gov-${{ github.ref_name }} ${{ secrets[format('PORTS_{0}', github.ref_name)] }} ${{ secrets.PM2_ENV_VARIABLES }} --restart=unless-stopped ${{ secrets.DOCKER_HUB_USERNAME }}/governance:${{ github.ref_name }}      
            docker image prune